# Ultra-minimal Alpine-based build
FROM python:3.12-alpine

# Install only essential runtime dependencies
RUN apk add --no-cache --virtual .build-deps \
    gcc \
    musl-dev \
    linux-headers \
    && apk add --no-cache \
    libstdc++ \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy minimal requirements
COPY requirements.minimal.txt requirements.txt

# Install Python dependencies with minimal footprint
RUN pip install --no-cache-dir --no-compile --disable-pip-version-check \
    -r requirements.txt \
    && apk del .build-deps \
    && find /usr/local/lib/python3.12 -name "*.pyc" -delete \
    && find /usr/local/lib/python3.12 -name "__pycache__" -type d -exec rm -rf {} + \
    && rm -rf /root/.cache/pip

# Copy only essential application files
COPY app.py ebook_search.py ./

# Create mount directories
RUN mkdir -p /mnt/{ebooks,documents,downloads,books,desktop,calibre}

# Create non-root user
RUN addgroup -g 1000 -S app && adduser -u 1000 -S app -G app
USER app

# Environment variables
ENV STREAMLIT_SERVER_PORT=8501 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_SERVER_HEADLESS=true \
    STREAMLIT_BROWSER_GATHER_USAGE_STATS=false \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Expose port
EXPOSE 8501

# Run application
CMD ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0"] 